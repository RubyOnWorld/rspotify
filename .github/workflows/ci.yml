on:
  pull_request:
  push:
    branches: master

name: Continuous Integration

jobs:
  formatting:
    name: Formatting
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          components: rustfmt

      - name: Run cargo fmt
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

  docs:
    name: Check Docs
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - name: Install cargo-deadlinks
        run: cargo install cargo-deadlinks

      - name: Build and Check
        run: RUSTDOCFLAGS='-D warnings' cargo doc --features=cli,env-file

      - name: Look for Dead Links
        run: |
          cd target
          for crate in doc/rspotify*; do
            echo ">> Checking in $crate"
            cargo deadlinks --check-http --dir "$crate"
          done
        continue-on-error: true

  test:
    name: Test and Lint for each Client
    runs-on: ubuntu-latest
    env:
      RUST_BACKTRACE: 1
    strategy:
      matrix:
        features:
          - rspotify/cli,rspotify/env-file,rspotify/client-ureq,rspotify/ureq-rustls-tls,rspotify-http/client-ureq,rspotify-http/ureq-rustls-tls
          - rspotify/cli,rspotify/env-file,rspotify/client-reqwest,rspotify/reqwest-rustls-tls,rspotify-http/client-reqwest,rspotify-http/reqwest-rustls-tls
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          components: clippy

      - name: Run cargo clippy
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: -p rspotify -p rspotify-http -p rspotify-model -p rspotify-macros --no-default-features --features=${{ matrix.features }} -- -D warnings

      - name: Run cargo test
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: -p rspotify -p rspotify-http -p rspotify-model -p rspotify-macros --no-default-features --features=${{ matrix.features }}

on:
  create:
    tags:
      - v*

name: Publish Crate

jobs:
  deploy:
    name: Deploy a new version of Rspotify to crate.io
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      - uses: katyo/publish-crates@v1
        with:
          registry-token: ${{secrets.CARGO_REGISTRY_TOKEN}}
